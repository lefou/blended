akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = debug

  log-config-on-start = off

  actor {
    debug {
      receive = off
      lifecycle = on
    }
  }
}

blended {

  flow {
    headerPrefix = "Blended"
  }

  activemq {
    brokerstarter {

      broker {
        blended {
          file: "broker.amq"
          provider: "external"
          clientId: "external"
          withSsl : false
        }

        broker2 {
          file: "broker2.amq"
          provider: "internal"
          clientId: "internal"
          withSsl : false
        }
      }

    }
  }

  jms {
    bridge {
      provider : [
        {
          vendor : "activemq"
          provider : "internal"
          internal : true
          inbound : "bridge.data.in"
          outbound : "bridge.data.out"
          errorQueue: "global.error"
          eventQueue: "event.out"
          listener: 3
        },
        {
          vendor : "activemq"
          provider : "external"
          internal : false
          inbound : "bridge.data.in"
          outbound : "bridge.data.out"
          errorQueue: "global.error"
          eventQueue: "event.out"
          listener: 3
        }
      ]

      inbound : [
        {
          name = "sampleIn",
          vendor = "activemq"
          provider = "external"
          from = "sampleIn"
        }
      ]

    }
  }
}

FixedPool {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 32
  }
  throughput = 1
}
