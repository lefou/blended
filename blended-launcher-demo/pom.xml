<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014ff,  https://github.com/woq-blended
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <prerequisites>
    <maven>3.3.3</maven>
  </prerequisites>

  <parent>
    <groupId>de.wayofquality.blended</groupId>
    <artifactId>blended.parent</artifactId>
    <version>1.2-SNAPSHOT</version>
    <relativePath>../blended-parent</relativePath>
  </parent>

  <name>${project.artifactId}</name>
  <artifactId>blended.launcher.demo</artifactId>
  <packaging>jar</packaging>

  <description>
    A sample container for the blended launcher
  </description>

  <properties>
    <profile.name>blended-demo</profile.name>
    <profile.version>${project.version}</profile.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher</artifactId>
      <version>${blended.version}</version>
      <type>zip</type>
      <classifier>bin</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-base</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-commons</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-http</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-jetty</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-jaxrs</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-spray</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-hawtio</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-spring</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-activemq</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-camel</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blended.launcher.features</artifactId>
      <version>${blended.version}</version>
      <type>conf</type>
      <classifier>blended-samples</classifier>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <dependencies>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blended.updater.tools</artifactId>
            <version>${blended.version}</version>
          </dependency>
        </dependencies>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals><goal>script</goal></goals>
            <configuration>
              <script><![CDATA[
                import blended.updater.tools.configbuilder._
                import scala.collection.JavaConverters._
                import java.io.File
                
                val srcProfile = new File(project.getBasedir, "target/classes/profile.conf")
                val targetProfile = new File(project.getBasedir, "target/classes/profile.conf")

                val confArtifacts = project.getDependencyArtifacts.asScala.
                  filter(a => a.getScope() == "compile" && a.getType() == "conf")
                println(s"Feature artifacts: ${confArtifacts.mkString(", ")}")
                val featureFiles = confArtifacts.map(_.getFile())
 
 				println("feature args: " + featureFiles.toArray.flatMap { f =>
                  Array("-r", f.getAbsolutePath)
                })
 
                val localRepoUrl = project.getProjectBuildingRequest.getLocalRepository.getUrl
                val remoteRepoUrls = project.getRepositories.asScala.map(r => r.getUrl)
 
                val profileArgs = Array(
                  "-f", srcProfile.getAbsolutePath,
                  "-o", targetProfile.getAbsolutePath,
                  "-d",
                  "-u",
                  "--maven-url", localRepoUrl
                ) ++ featureFiles.toArray.flatMap { f => 
                  Array("-r", f.getAbsolutePath)
                } ++ remoteRepoUrls.toArray.flatMap(u => Array("--maven-url", u))
                RuntimeConfigBuilder.run(profileArgs)
              ]]></script>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>launcher</id>
            <phase>package</phase>
            <goals><goal>unpack</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>blended.launcher</artifactId>
                  <classifier>bin</classifier>
                  <type>zip</type>
                  <outputDirectory>${project.build.directory}/launcher</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/linux-nojre.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>CreateProduct</id>
            <phase>package</phase>
            <goals><goal>single</goal></goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>

