version: 2.1

orbs:
  blended:
    commands:
      # ----------------------------------------------------------------------------------------
      # persist a complete directory incl. sub directories to the workspace using a tar file
      # ----------------------------------------------------------------------------------------
      persist_dir_to_workspace:
        parameters:
          workspace:
            type: string
          dir:
            type: string
          file:
            type: string
        steps:
          - run:
              name: Package << parameters.dir >>
              command: |
                mkdir -p << parameters.workspace >>
                tar -C << parameters.dir >> -cvzf << parameters.workspace >>/<< parameters.file >> .

          - persist_to_workspace:
              root: << parameters.workspace >>
              paths:
                - << parameters.file >>

      # ----------------------------------------------------------------------------------------
      # Update gh-pages with the content of a given directory
      # ----------------------------------------------------------------------------------------
      deploy_gh_pages:
        parameters:
          dir:
            type: string
          git_user_name:
            type: string
            default: Blended CI
          git_user_mail:
            type: string
            default: ci@wayofquality.de

        steps:
          - run:
              name: Deploy Site
              command: |
                git config user.email "<< parameters.git_user_mail >>"
                git config user.name "<< parameters.git_user_name >>"
                git checkout --orphan gh-pages
                git reset
                git add -f \<< parameters.dir >>
                git commit -m "[skip ci] Deploy Site, build number ${CIRCLE_BUILD_NUM}"
                git filter-branch -f --prune-empty --subdirectory-filter \<< parameters.dir >>
                git clean -f -f -d
                git push -f origin gh-pages

      # ----------------------------------------------------------------------------------------
      # Update gh-pages with the content of a given directory
      # ----------------------------------------------------------------------------------------
      clone_and_build:
        parameters:
          url:
            type: string
          dir:
            type: string
          src_archive:
            type: string
            default: ivylocal.tgz
          archive:
            type: string
        steps:
          - run:
              name: Prepare SSH
              command: |
                if [ "${HOME}" = "/" ]
                then
                  export HOME=$(getent passwd $(id -un) | cut -d: -f6)
                fi

                mkdir -p ~/.ssh

                echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts

                git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
                git config --global gc.auto 0 || true

          - add_ssh_keys:
              fingerprints:
                - "a2:b9:c0:32:b9:d8:24:95:4c:a2:7d:94:e6:6b:85:8e"

          - restore_cache:
              keys:
                - v3-blended-core-{{ arch }}-{{ checksum "build.sbt" }}
                - v3-blended-core-{{ arch }}

          - attach_workspace:
              at: /tmp/workspace

          - run:
              name: Extract Workspace
              command: |
                mkdir -p /home/blended/.ivy2/local
                tar -C /home/blended/.ivy2/local -xzf /tmp/workspace/<< parameters.src_archive >>

          - run:
              name: Clone
              command: |
                git clone << parameters.url >> << parameters.dir>>
                cd << parameters.dir >>

          - run:
              name: Build
              command: sbt clean test publishLocal

          - persist_dir_to_workspace:
              workspace: /tmp/workspace
              dir: /home/blended/.ivy2/local
              file: << parameters.archive >>

jobs:
  # -----------------------------------------------------------------------------------------------
  # Just prepare the build by running sbt update - this should throw up if any dependencies cannot
  # be resolved.
  # -----------------------------------------------------------------------------------------------
  prepare:
    shell: /bin/sh -leo pipefail
    working_directory: /home/blended/blended
    docker:
      - image: atooni/build-alpine:1.0
        user: blended
    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-blended-core-{{ arch }}-{{ checksum "build.sbt" }}
            - v3-blended-core-{{ arch }}

      - run:
          name : SBT Update
          command: sbt clean update

      - save_cache:
          key: v3-blended-core-{{ arch }}-{{ checksum "build.sbt" }}
          paths:
            - /home/blended/.ivy2

  # -----------------------------------------------------------------------------------------------
  # perform the actual compile job. Here we simply run sbt publish local, so that all our modules
  # end up in the local ivy directory
  # -----------------------------------------------------------------------------------------------
  compile:
    shell: /bin/sh -leo pipefail
    working_directory: /home/blended/blended
    docker:
      - image: atooni/build-alpine:1.0
        user: blended
    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-blended-core-{{ arch }}-{{ checksum "build.sbt" }}
            - v3-blended-core-{{ arch }}

      - run:
          name: Compile
          command: sbt clean publishLocal

      - blended/persist_dir_to_workspace:
          workspace: /tmp/workspace
          dir: /home/blended/.ivy2/local
          file: ivylocal.tgz

  # -----------------------------------------------------------------------------------------------
  # Run all unit tests, produce a coverage report and upload coverage data to codacy
  # we will attach the coverage data and other things to the current workspace, so that
  # we can use it in later jobs within the workflow
  # -----------------------------------------------------------------------------------------------
  unit-test:
    shell: /bin/sh -leo pipefail
    working_directory: /home/blended/blended
    docker:
      - image: atooni/build-alpine:1.0
        user: blended

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-blended-core-{{ arch }}-{{ checksum "build.sbt" }}
            - v3-blended-core-{{ arch }}

      - run:
          name: Coverage
          command: |
            bash /home/blended/blended/scripts/batchTest.sh
          environment:
            - TEST_ONLINE: true
            - SBT_OPTS: -Xmx1024M -XX:MaxMetaspaceSize=512m

      - run:
          name: Coverage Report
          command: sbt coverageReport coverageAggregate codacyCoverage

      - run:
          name: Save test results
          command: |
            mkdir -p /home/blended/blended/target/test-results/junit/
            find /home/blended/blended -type f -regex ".*/test-reports/.*xml" -exec cp {} /home/blended/blended/target/test-results/junit/ \;
            xunit-viewer --results=/home/blended/blended/target/test-results/junit --output=/home/blended/blended/target/test-results/junit.html
          when: always

      - store_test_results:
          path: /home/blended/blended/target/test-results

      - store_artifacts:
          path: /home/blended/blended/target/test-results
          prefix: XUnit

      - store_artifacts:
          path: /home/blended/blended/target/scala-2.12/scoverage-report
          prefix: coverage

      - store_artifacts:
          path: /home/blended/blended/target/testlog
          prefix: testlog

      - blended/persist_dir_to_workspace:
          workspace: /tmp/workspace
          dir: /home/blended/blended/target
          file: unittest.tgz

  # -----------------------------------------------------------------------------------------------
  # Generate and deploy the current documentation
  # -----------------------------------------------------------------------------------------------
  site:
    shell: /bin/sh -leo pipefail
    working_directory: /home/blended/blended
    docker:
      - image: atooni/build-alpine:1.0
        user: blended

    steps:
      - add_ssh_keys:
          fingerprints:
            - "a2:b9:c0:32:b9:d8:24:95:4c:a2:7d:94:e6:6b:85:8e"

      - restore_cache:
          keys:
            - v3-blended-core-{{ arch }}-{{ checksum "build.sbt" }}
            - v3-blended-core-{{ arch }}

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Extract Workspace
          command: |
            mkdir -p /home/blended/.ivy2/local
            tar -C /home/blended/.ivy2/local -xzf /tmp/workspace/ivylocal.tgz
            mkdir -p /home/blended/blended/target
            tar -C /home/blended/blended/target -xvzf /tmp/workspace/unittest.tgz

      - run:
          name: Build docs
          command: sbt unidoc jbakeSite

      - blended/deploy_gh_pages:
          dir: target/site

  # -----------------------------------------------------------------------------------------------
  # Checkout and build the integration test support
  # -----------------------------------------------------------------------------------------------
  itest-support:
    shell: /bin/sh -leo pipefail
    working_directory: /home/blended/itest
    docker:
      - image: atooni/build-alpine:1.0
        user: blended

    steps:
      - blended/clone_and_build:
          url: ssh://git@github.com/woq-blended/blended.itestsupport.git
          dir: /home/blended/itest
          archive: ivylocal-test.tgz

  # -----------------------------------------------------------------------------------------------
  # Checkout and build the management UI
  # -----------------------------------------------------------------------------------------------
  mgmt-ui:
    shell: /bin/sh -leo pipefail
    working_directory: /home/blended/ui
    docker:
      - image: atooni/build-alpine:1.0
        user: blended

    steps:
      - blended/clone_and_build:
          url: ssh://git@github.com/woq-blended/blended.mgmt.ui.git mgmtui
          dir: /home/blended/ui
          archive: ivylocal-ui.tgz

# -----------------------------------------------------------------------------------------------
# Put everything together in a workflow
# -----------------------------------------------------------------------------------------------
workflows:
  version: 2.1
  blended:
    jobs:
      # -----------------------------------------------------------------------------------------
      - prepare:
          filters:
            branches:
              ignore:
                - gh-pages

      # -----------------------------------------------------------------------------------------
      - compile:
          filters:
            branches:
              ignore:
                - gh-pages
          requires:
            - prepare

      # -----------------------------------------------------------------------------------------
      - unit-test:
          filters:
            branches:
              ignore:
                - gh-pages
          context: blended
          requires:
            - compile

      # -----------------------------------------------------------------------------------------
      - site:
          filters:
            branches:
              ignore:
                - gh-pages
          context: blended
          requires:
            - unit-test

      # -----------------------------------------------------------------------------------------
      - itest-support:
          filters:
            branches:
              ignore:
                - gh-pages
          context: blended
          requires:
            - compile

      # -----------------------------------------------------------------------------------------
      - mgmt-ui:
          filters:
            branches:
              ignore:
                - gh-pages
          context: blended
          requires:
            - compile
